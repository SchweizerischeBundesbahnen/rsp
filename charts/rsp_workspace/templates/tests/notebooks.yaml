apiVersion: v1
kind: Pod
metadata:
  name: "{{ .Release.Name }}-test"
  annotations:
    "helm.sh/hook": test-success
spec:
  restartPolicy: Never
  containers:
    - image: "docker.bin.sbb.ch/pfi/rsp-workspace:{{ .Values.RspWorkspaceVersion }}"
      imagePullPolicy: Always # Always or IfNotPresent (latest requires pulling always)
      name: "{{ .Release.Name }}"
      env:
        # set GIT_SSH_COMMAND to access the private key mounted
        - name: GIT_SSH_COMMAND
          value: "ssh -o ProxyCommand='connect -H zscaler.sbb.ch:10465 %h %p' -i /home/jovyan/ssh/ssh-privatekey -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
      args:
        - /bin/bash
        - -c
        - |
          # echo shell commands and fail script on error
          set -e
          set -x

          # we need to fix user before cloning https://stackoverflow.com/questions/47706024/docker-set-running-user-while-launch-container/57531352#57531352
          set-ocuser-as-jovyan

          # set http proxy for conda
          source set-sbb-proxy
          #printenv
          export WORKDIR=$PWD

          # set up http proxy for git (used for FLATland pip dependency)
          git config --global http.sslVerify false
          git config --global http.proxy $HTTP_PROXY
          git config --global http.postBuffer 524288000
          git config --global http.maxRequestBuffer 524288000
          git config --global core.compression 0


          GIT_CURL_VERBOSE=1 git clone http://gitlab.aicrowd.com/flatland/flatland.git


          # clone (ssh key and proxy are injected by SSH_GIT_COMMAND env variable)
          git clone git@github.com:SchweizerischeBundesbahnen/rsp.git
          cd rsp
          git checkout {{ .Values.RspVersion }} --recurse-submodules
          cd $WORKDIR
          #git clone git@github.com:SchweizerischeBundesbahnen/rsp-data.git

          # set up environment
          conda init bash
          source ~/.bashrc

          # set up conda environment with dependencies and requirement for ci (testing, linting etc.)
          mkdir -p $WORKDIR/conda
          conda env create --prefix $WORKDIR/conda --file $WORKDIR/rsp/rsp_environment.yml --force --verbose
          conda activate rsp

          xvfb-run python $WORKDIR/rsp/tests/03_integration_tests/test_notebook_runs_through.py
      resources:
      {{- toYaml .Values.resources | nindent 12 }}
      volumeMounts:
        - mountPath: "/home/jovyan/ssh"
          name: ssh-volume
  volumes:
    - name: ssh-volume
      secret:
        secretName: jenkins-master-key
        defaultMode: 256
